// Generated by view binder compiler. Do not edit!
package com.vitalsign.patientmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.vitalsign.patientmanager.R;
import com.vitalsign.patientmanager.view.FreeScrollContainer;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPatientDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button buttonFullscreenTimeline;

  @NonNull
  public final Button buttonShowMonthlyView;

  @NonNull
  public final TextInputEditText editDateOfBirth;

  @NonNull
  public final FloatingActionButton fabAddEvent;

  @NonNull
  public final FreeScrollContainer freeScrollContainer;

  @NonNull
  public final TextView headerDay;

  @NonNull
  public final TextView headerMonth;

  @NonNull
  public final RecyclerView recyclerViewEvents;

  @NonNull
  public final TextView textAge;

  @NonNull
  public final TextView textCurrentDate;

  @NonNull
  public final TextView textCurrentDay;

  @NonNull
  public final TextView textPatientCreated;

  @NonNull
  public final TextView textPatientName;

  @NonNull
  public final LinearLayout timelineHeader;

  @NonNull
  public final Toolbar toolbar;

  private ActivityPatientDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull Button buttonFullscreenTimeline, @NonNull Button buttonShowMonthlyView,
      @NonNull TextInputEditText editDateOfBirth, @NonNull FloatingActionButton fabAddEvent,
      @NonNull FreeScrollContainer freeScrollContainer, @NonNull TextView headerDay,
      @NonNull TextView headerMonth, @NonNull RecyclerView recyclerViewEvents,
      @NonNull TextView textAge, @NonNull TextView textCurrentDate,
      @NonNull TextView textCurrentDay, @NonNull TextView textPatientCreated,
      @NonNull TextView textPatientName, @NonNull LinearLayout timelineHeader,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.buttonFullscreenTimeline = buttonFullscreenTimeline;
    this.buttonShowMonthlyView = buttonShowMonthlyView;
    this.editDateOfBirth = editDateOfBirth;
    this.fabAddEvent = fabAddEvent;
    this.freeScrollContainer = freeScrollContainer;
    this.headerDay = headerDay;
    this.headerMonth = headerMonth;
    this.recyclerViewEvents = recyclerViewEvents;
    this.textAge = textAge;
    this.textCurrentDate = textCurrentDate;
    this.textCurrentDay = textCurrentDay;
    this.textPatientCreated = textPatientCreated;
    this.textPatientName = textPatientName;
    this.timelineHeader = timelineHeader;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPatientDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPatientDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_patient_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPatientDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonFullscreenTimeline;
      Button buttonFullscreenTimeline = ViewBindings.findChildViewById(rootView, id);
      if (buttonFullscreenTimeline == null) {
        break missingId;
      }

      id = R.id.buttonShowMonthlyView;
      Button buttonShowMonthlyView = ViewBindings.findChildViewById(rootView, id);
      if (buttonShowMonthlyView == null) {
        break missingId;
      }

      id = R.id.editDateOfBirth;
      TextInputEditText editDateOfBirth = ViewBindings.findChildViewById(rootView, id);
      if (editDateOfBirth == null) {
        break missingId;
      }

      id = R.id.fabAddEvent;
      FloatingActionButton fabAddEvent = ViewBindings.findChildViewById(rootView, id);
      if (fabAddEvent == null) {
        break missingId;
      }

      id = R.id.freeScrollContainer;
      FreeScrollContainer freeScrollContainer = ViewBindings.findChildViewById(rootView, id);
      if (freeScrollContainer == null) {
        break missingId;
      }

      id = R.id.headerDay;
      TextView headerDay = ViewBindings.findChildViewById(rootView, id);
      if (headerDay == null) {
        break missingId;
      }

      id = R.id.headerMonth;
      TextView headerMonth = ViewBindings.findChildViewById(rootView, id);
      if (headerMonth == null) {
        break missingId;
      }

      id = R.id.recyclerViewEvents;
      RecyclerView recyclerViewEvents = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewEvents == null) {
        break missingId;
      }

      id = R.id.textAge;
      TextView textAge = ViewBindings.findChildViewById(rootView, id);
      if (textAge == null) {
        break missingId;
      }

      id = R.id.textCurrentDate;
      TextView textCurrentDate = ViewBindings.findChildViewById(rootView, id);
      if (textCurrentDate == null) {
        break missingId;
      }

      id = R.id.textCurrentDay;
      TextView textCurrentDay = ViewBindings.findChildViewById(rootView, id);
      if (textCurrentDay == null) {
        break missingId;
      }

      id = R.id.textPatientCreated;
      TextView textPatientCreated = ViewBindings.findChildViewById(rootView, id);
      if (textPatientCreated == null) {
        break missingId;
      }

      id = R.id.textPatientName;
      TextView textPatientName = ViewBindings.findChildViewById(rootView, id);
      if (textPatientName == null) {
        break missingId;
      }

      id = R.id.timelineHeader;
      LinearLayout timelineHeader = ViewBindings.findChildViewById(rootView, id);
      if (timelineHeader == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityPatientDetailBinding((CoordinatorLayout) rootView,
          buttonFullscreenTimeline, buttonShowMonthlyView, editDateOfBirth, fabAddEvent,
          freeScrollContainer, headerDay, headerMonth, recyclerViewEvents, textAge, textCurrentDate,
          textCurrentDay, textPatientCreated, textPatientName, timelineHeader, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
