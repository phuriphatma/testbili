// Generated by view binder compiler. Do not edit!
package com.vitalsign.patientmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.vitalsign.patientmanager.R;
import com.vitalsign.patientmanager.view.FreeScrollContainer;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFullscreenTimelineBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnResetZoom;

  @NonNull
  public final Button btnZoomIn;

  @NonNull
  public final Button btnZoomOut;

  @NonNull
  public final Button buttonBack;

  @NonNull
  public final FloatingActionButton fabAddEvent;

  @NonNull
  public final FreeScrollContainer freeScrollContainer;

  @NonNull
  public final TextView headerDay;

  @NonNull
  public final TextView headerMonth;

  @NonNull
  public final LinearLayout headerSection;

  @NonNull
  public final RecyclerView recyclerViewTimeline;

  @NonNull
  public final TextView textPatientInfo;

  @NonNull
  public final TextView textPatientName;

  @NonNull
  public final LinearLayout timelineHeader;

  private ActivityFullscreenTimelineBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnResetZoom, @NonNull Button btnZoomIn, @NonNull Button btnZoomOut,
      @NonNull Button buttonBack, @NonNull FloatingActionButton fabAddEvent,
      @NonNull FreeScrollContainer freeScrollContainer, @NonNull TextView headerDay,
      @NonNull TextView headerMonth, @NonNull LinearLayout headerSection,
      @NonNull RecyclerView recyclerViewTimeline, @NonNull TextView textPatientInfo,
      @NonNull TextView textPatientName, @NonNull LinearLayout timelineHeader) {
    this.rootView = rootView;
    this.btnResetZoom = btnResetZoom;
    this.btnZoomIn = btnZoomIn;
    this.btnZoomOut = btnZoomOut;
    this.buttonBack = buttonBack;
    this.fabAddEvent = fabAddEvent;
    this.freeScrollContainer = freeScrollContainer;
    this.headerDay = headerDay;
    this.headerMonth = headerMonth;
    this.headerSection = headerSection;
    this.recyclerViewTimeline = recyclerViewTimeline;
    this.textPatientInfo = textPatientInfo;
    this.textPatientName = textPatientName;
    this.timelineHeader = timelineHeader;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFullscreenTimelineBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFullscreenTimelineBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_fullscreen_timeline, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFullscreenTimelineBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnResetZoom;
      Button btnResetZoom = ViewBindings.findChildViewById(rootView, id);
      if (btnResetZoom == null) {
        break missingId;
      }

      id = R.id.btnZoomIn;
      Button btnZoomIn = ViewBindings.findChildViewById(rootView, id);
      if (btnZoomIn == null) {
        break missingId;
      }

      id = R.id.btnZoomOut;
      Button btnZoomOut = ViewBindings.findChildViewById(rootView, id);
      if (btnZoomOut == null) {
        break missingId;
      }

      id = R.id.buttonBack;
      Button buttonBack = ViewBindings.findChildViewById(rootView, id);
      if (buttonBack == null) {
        break missingId;
      }

      id = R.id.fabAddEvent;
      FloatingActionButton fabAddEvent = ViewBindings.findChildViewById(rootView, id);
      if (fabAddEvent == null) {
        break missingId;
      }

      id = R.id.freeScrollContainer;
      FreeScrollContainer freeScrollContainer = ViewBindings.findChildViewById(rootView, id);
      if (freeScrollContainer == null) {
        break missingId;
      }

      id = R.id.headerDay;
      TextView headerDay = ViewBindings.findChildViewById(rootView, id);
      if (headerDay == null) {
        break missingId;
      }

      id = R.id.headerMonth;
      TextView headerMonth = ViewBindings.findChildViewById(rootView, id);
      if (headerMonth == null) {
        break missingId;
      }

      id = R.id.headerSection;
      LinearLayout headerSection = ViewBindings.findChildViewById(rootView, id);
      if (headerSection == null) {
        break missingId;
      }

      id = R.id.recyclerViewTimeline;
      RecyclerView recyclerViewTimeline = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewTimeline == null) {
        break missingId;
      }

      id = R.id.textPatientInfo;
      TextView textPatientInfo = ViewBindings.findChildViewById(rootView, id);
      if (textPatientInfo == null) {
        break missingId;
      }

      id = R.id.textPatientName;
      TextView textPatientName = ViewBindings.findChildViewById(rootView, id);
      if (textPatientName == null) {
        break missingId;
      }

      id = R.id.timelineHeader;
      LinearLayout timelineHeader = ViewBindings.findChildViewById(rootView, id);
      if (timelineHeader == null) {
        break missingId;
      }

      return new ActivityFullscreenTimelineBinding((ConstraintLayout) rootView, btnResetZoom,
          btnZoomIn, btnZoomOut, buttonBack, fabAddEvent, freeScrollContainer, headerDay,
          headerMonth, headerSection, recyclerViewTimeline, textPatientInfo, textPatientName,
          timelineHeader);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
