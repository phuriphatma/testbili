// Generated by view binder compiler. Do not edit!
package com.vitalsign.patientmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.vitalsign.patientmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPatientBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView textCreatedAt;

  @NonNull
  public final TextView textDateOfBirth;

  @NonNull
  public final TextView textPatientAge;

  @NonNull
  public final TextView textPatientName;

  private ItemPatientBinding(@NonNull MaterialCardView rootView, @NonNull TextView textCreatedAt,
      @NonNull TextView textDateOfBirth, @NonNull TextView textPatientAge,
      @NonNull TextView textPatientName) {
    this.rootView = rootView;
    this.textCreatedAt = textCreatedAt;
    this.textDateOfBirth = textDateOfBirth;
    this.textPatientAge = textPatientAge;
    this.textPatientName = textPatientName;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPatientBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPatientBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_patient, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPatientBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.textCreatedAt;
      TextView textCreatedAt = ViewBindings.findChildViewById(rootView, id);
      if (textCreatedAt == null) {
        break missingId;
      }

      id = R.id.textDateOfBirth;
      TextView textDateOfBirth = ViewBindings.findChildViewById(rootView, id);
      if (textDateOfBirth == null) {
        break missingId;
      }

      id = R.id.textPatientAge;
      TextView textPatientAge = ViewBindings.findChildViewById(rootView, id);
      if (textPatientAge == null) {
        break missingId;
      }

      id = R.id.textPatientName;
      TextView textPatientName = ViewBindings.findChildViewById(rootView, id);
      if (textPatientName == null) {
        break missingId;
      }

      return new ItemPatientBinding((MaterialCardView) rootView, textCreatedAt, textDateOfBirth,
          textPatientAge, textPatientName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
